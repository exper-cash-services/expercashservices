# docker-compose.yml
# نظام EXPER CASH SERVICES - إعداد Docker Compose

version: '3.8'

services:
  # === تطبيق Node.js الرئيسي ===
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: exper_cash_app
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - MONGODB_URI=mongodb://mongo:27017/exper_cash_db
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=${JWT_SECRET}
      - ENCRYPTION_KEY=${ENCRYPTION_KEY}
    depends_on:
      - mongo
      - redis
    volumes:
      - ./logs:/app/logs
      - ./uploads:/app/uploads
      - ./backups:/app/backups
      - ./reports:/app/reports
    networks:
      - exper_network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.exper-cash.rule=Host(`app.expercash.ma`)"
      - "traefik.http.routers.exper-cash.tls=true"
      - "traefik.http.routers.exper-cash.tls.certresolver=letsencrypt"

  # === قاعدة بيانات MongoDB ===
  mongo:
    image: mongo:6.0
    container_name: exper_cash_mongo
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: exper_cash_db
    volumes:
      - mongo_data:/data/db
      - ./mongo-init:/docker-entrypoint-initdb.d
      - ./backups/mongo:/backup
    networks:
      - exper_network
    command: mongod --auth --bind_ip_all
    
  # === Redis للتخزين المؤقت ===
  redis:
    image: redis:7-alpine
    container_name: exper_cash_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf
    networks:
      - exper_network
    command: redis-server /usr/local/etc/redis/redis.conf
    
  # === Nginx Reverse Proxy ===
  nginx:
    image: nginx:alpine
    container_name: exper_cash_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/ssl/certs
      - ./public:/var/www/html
    depends_on:
      - app
    networks:
      - exper_network

  # === خدمة النسخ الاحتياطية ===
  backup:
    build:
      context: .
      dockerfile: Dockerfile.backup
    container_name: exper_cash_backup
    restart: unless-stopped
    environment:
      - MONGODB_URI=mongodb://mongo:27017/exper_cash_db
      - BACKUP_SCHEDULE=${BACKUP_SCHEDULE:-0 2 * * *}
      - BACKUP_RETENTION_DAYS=${BACKUP_RETENTION_DAYS:-30}
    volumes:
      - ./backups:/app/backups
      - mongo_data:/data/db:ro
    depends_on:
      - mongo
    networks:
      - exper_network

  # === مراقبة الأداء (اختياري) ===
  prometheus:
    image: prom/prometheus
    container_name: exper_cash_prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    networks:
      - exper_network
    profiles:
      - monitoring

  grafana:
    image: grafana/grafana
    container_name: exper_cash_grafana
    restart: unless-stopped
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin123}
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    networks:
      - exper_network
    profiles:
      - monitoring

  # === إدارة قاعدة البيانات (اختياري) ===
  mongo-express:
    image: mongo-express
    container_name: exper_cash_mongo_express
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_ROOT_USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_ROOT_PASSWORD}
      ME_CONFIG_MONGODB_URL: mongodb://mongo:27017/
      ME_CONFIG_BASICAUTH_USERNAME: ${MONGO_EXPRESS_USER:-admin}
      ME_CONFIG_BASICAUTH_PASSWORD: ${MONGO_EXPRESS_PASS:-admin123}
    depends_on:
      - mongo
    networks:
      - exper_network
    profiles:
      - development

# === الشبكات ===
networks:
  exper_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

# === وحدات التخزين ===
volumes:
  mongo_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data/mongo
  
  redis_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data/redis
  
  prometheus_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data/prometheus
  
  grafana_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data/grafana

# === التكوين الإضافي ===
x-logging: &default-logging
  driver: "json-file"
  options:
    max-size: "10m"
    max-file: "3"

# تطبيق إعدادات السجلات على جميع الخدمات
x-common-variables: &common-variables
  logging: *default-logging